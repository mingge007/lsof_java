[{"title":"Selenium学习","date":"2017-08-17T08:42:02.000Z","path":"blogs/2017-08-17-python-Selenium.html","text":"#介绍SeleniumSelenium 是什么？一句话，自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器，如果你在这些浏览器里面安装一个 Selenium 的插件，那么便可以方便地实现Web界面的测试。换句话说叫 Selenium 支持这些浏览器驱动。Selenium支持多种语言开发，比如 Java，C，Ruby等等，而对于python，当然也是支持的！ #安装pythonhttps://www.python.org/downloads/ 下载python3不要在首页直接点下载，要根据电脑选择适合的安装包https://www.python.org/downloads/release/python-362/ 选【Windows x86-64 executable installer】版本 安装时选择自定义目录，添加path，和下载基本库，debug等等选项。 组合按键：win+r，输入：sysdm.cpl，选择高级，查看环境变量是否都配置完整例如主目录：D:\\Python36\\脚本目:录D:\\Python36\\Scripts\\组合按键：win+r，输入cmd,打开命令行界面，输入python \\pip3 -V 分别检测安装情况 1234567C:\\Users\\liudaye&gt;pythonPython 3.6.2 (v3.6.2:5fd33b5, Jul 8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)] on win32Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; quit() //输入quit退出C:\\Users\\liudaye&gt;pip3 -Vpip 9.0.1 from d:\\python36\\lib\\site-packages (python 3.6) #安装seleniumpip3 install123456C:\\Users\\liudaye&gt;pip3 install seleniumCollecting selenium Downloading selenium-3.5.0-py2.py3-none-any.whl (921kB) 100% |████████████████████████████████| 921kB 1.0MB/sInstalling collected packages: seleniumSuccessfully installed selenium-3.5.0 安装驱动下载地址：https://sites.google.com/a/chromium.org/chromedriver/downloads选择最新版本，下载后配置环境变量path 增加D:\\chromedriver_win32 测试自动化1234567C:\\Users\\liudaye&gt;pythonPython 3.6.2 (v3.6.2:5fd33b5, Jul 8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)] on win32Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; from selenium import webdriver&gt;&gt;&gt; browser = webdriver.Chrome()&gt;&gt;&gt; browser.get(&apos;http://www.baidu.com/&apos;)&gt;&gt;&gt; 运行这段代码，会自动打开浏览器，然后访问百度。 Linux的环境变量也好设置，在~/.bashrc文件中export即可，记得source ~/.bashrc。 当然，你不设置环境变量也是可以的，程序可以这样写： 1234567C:\\Users\\liudaye&gt;pythonPython 3.6.2 (v3.6.2:5fd33b5, Jul 8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)] on win32Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt;from selenium import webdriver&gt;&gt;&gt;browser = webdriver.Chrome(&apos;D:\\chromedriver_win32\\chromedriver.exe&apos;)&gt;&gt;&gt;browser.get(&apos;http://www.baidu.com/&apos;)&gt;&gt;&gt; 模拟提交运行一下python代码12345678910from selenium import webdriverfrom selenium.webdriver.common.keys import Keysdriver = webdriver.Chrome()driver.get(\"http://www.python.org\")assert \"Python\" in driver.titleelem = driver.find_element_by_name(\"q\")elem.send_keys(\"pycon\")elem.send_keys(Keys.RETURN)print(driver.page_source) 元素选取 单个元素选取Api： 12345678find_element_by_idfind_element_by_namefind_element_by_xpathfind_element_by_link_textfind_element_by_partial_link_textfind_element_by_tag_namefind_element_by_class_namefind_element_by_css_selector 多个元素选取： 1234567find_elements_by_namefind_elements_by_xpathfind_elements_by_link_textfind_elements_by_partial_link_textfind_elements_by_tag_namefind_elements_by_class_namefind_elements_by_css_selector 另外还可以利用 By 类来确定哪种选择方式：123from selenium.webdriver.common.by import Bydriver.find_element(By.XPATH, '//button[text()=\"Some text\"]')driver.find_elements(By.XPATH, '//button') By类的一些属性如下： 12345678ID = \"id\"XPATH = \"xpath\"LINK_TEXT = \"link text\"PARTIAL_LINK_TEXT = \"partial link text\"NAME = \"name\"TAG_NAME = \"tag name\"CLASS_NAME = \"class name\"CSS_SELECTOR = \"css selector\" 这些方法跟JavaScript的一些方法有相似之处，find_element_by_id，就是根据标签的id属性查找元素，find_element_by_name，就是根据标签的name属性查找元素。举个简单的例子，比如我想找到下面这个元素：1&lt;input type=\"text\" name=\"passwd\" id=\"passwd-id\" /&gt; 1234element = driver.find_element_by_id(\"passwd-id\")element = driver.find_element_by_name(\"passwd\")element = driver.find_elements_by_tag_name(\"input\")element = driver.find_element_by_xpath(\"//input[@id='passwd-id']\") 未完待续····","tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.liudaye.com/tags/学习笔记/"},{"name":"python","slug":"python","permalink":"http://www.liudaye.com/tags/python/"},{"name":"测试","slug":"测试","permalink":"http://www.liudaye.com/tags/测试/"}]},{"title":"『华语摇滚』","date":"2017-03-20T10:10:01.000Z","path":"blogs/2017-03-20-second.html","text":"被遗忘在角落里的呐喊 本歌单主要集合了在国内各种摇滚风格里，具有代表性的摇滚人或摇滚乐队的作品，只有崔健的加了三首，分别为《一无所有》、《新长征路上的摇滚》、《花房姑娘》，其他的只选择了一首。个别的也选了几首新人的摇滚作品加入了歌单，或许还不够那么成熟老练，还是多多支持吧，另外也为这期华语摇滚歌单，注入一股新鲜的血液。 本歌单纯属个人爱好，如有不足还请见谅，同时也希望大家推荐你喜欢的摇滚人或乐队的曲目，我会有筛选性的加入此歌单内。 他们续写着青春，追忆着年华，让我们一起来回味那段不老的时光吧","tags":[{"name":"音乐","slug":"音乐","permalink":"http://www.liudaye.com/tags/音乐/"},{"name":"摇滚","slug":"摇滚","permalink":"http://www.liudaye.com/tags/摇滚/"}]},{"title":"春天游记","date":"2017-03-15T05:23:45.000Z","path":"blogs/2017-03-15-photos1.html","text":"2017年的北京春天是一个单车交配的季节，摩拜单车，ofo等等，大街上，甚至长安街上小黄，小橙，小蓝，小绿穿梭于蓝天白云之下。 元宵节路过安静的满福楼 路过国家大剧院 路过新华门 路过西单 慵懒的奥森天鹅 孔乙己酒店…书本上的人物还有酒店 ^_^ 设计不错，仔细一看居然是如家.. 哈哈 是网上人大还是大人上网？ 和敬公主府 邹德华先生 据浙江卫视说 北京正宗的正黄旗炸酱面，打卤面 攀附权贵 去电影学院看美女，美女没看到，简单记录一下吧 路过无初次 去过无数次 故宫城墙外白色的玉兰花","tags":[{"name":"春天","slug":"春天","permalink":"http://www.liudaye.com/tags/春天/"},{"name":"相册","slug":"相册","permalink":"http://www.liudaye.com/tags/相册/"}]},{"title":"『欧美』 春天，与电影里的民谣有个约会","date":"2017-03-15T04:59:01.000Z","path":"blogs/2017-03-15-music-test.html","text":"醉乡民谣一把吉他 撩动光影中的岁月过往一首歌曲 吟唱故事里的人生四季那些电影里的民谣 在春天我们和它们有个约会 ☆ 歌单选曲绝大部分是电影里民谣，但有几首风格有乡村或其他元素，按顺序或随机播放效果都不错 1-2.毕业生 The Graduate (1967)3-4.断背山 Brokeback Mountain (2005)5-9.为子搬迁 Away We Go (2009)10-14.荒野生存 Into the Wild (2007)15.朝圣之路The Way (2010)16-18.美丽的凯特 Beautiful Kate (2009)19-22.情归新泽西 Garden State (2004)23-27.寻爱之旅 Heartlands (2002)28-29.鱿鱼和鲸 The Squid and the Whale 200530-31.最炎热的国度 The Hottest State (2006)32.我不在那儿 I’m Not There (2007)33-36.最后一周 One Week (2008)37.怦然心动 Flipped (2010)38.暮光之城 Twilight (2008)39.暖暖内含光 Eternal Sunshine of the Spotless Mind (2004)40.超脱 Detachment (2011)41.心灵捕手 Good Will Hunting (1997)42.乡谣情缘 Country Strong (2010)43.疯狂的心 Crazy Heart (2009)44.Natural Born Killers (1994)45.乌云背后的幸福线 Silver Linings Playbook (2012)46.逍遥骑士 Easy Rider (1969)47.Closer (2004)48-49.曾经 Once (2006)50-54.寻找小糖人 Searching for Sugar Man (2012）55-60.醉乡民谣 Inside Llewyn Davis (2013)61-65.比利小子 Pat Garrett &amp; Billy the Kid (1973","tags":[{"name":"春天","slug":"春天","permalink":"http://www.liudaye.com/tags/春天/"},{"name":"音乐","slug":"音乐","permalink":"http://www.liudaye.com/tags/音乐/"}]},{"title":"博客安家手记","date":"2016-03-14T06:08:56.000Z","path":"blogs/2016-03-14-firstblog.html","text":"初心每次看到大神们技术博客新颖清新，设计扁平，心中难免冲动就想拥有一个自己的博客，作为一个后端服务开发程序猿，一想到不熟悉的静态页面都会头大。 行动域名申请下来已经两年了，忙到两年没有时间照顾自己了，年后终于找到些许时间决定调研一下，很快徜徉在各个前端大神清莲如润的博客当中，甚是惬意，像发现新大陆的孩童一般。很快chrome浏览器内存满为患，tab页已经无法数清。 选择终于在简书当中发现一种正适合我的主站方式：Github Pages + hexo + 域名绑定；教程：参考教程:我的博客是如何搭建的（github pages + HEXO + 域名绑定） ,手把手教你使用Hexo + Github Pages搭建个人独立博客；主题：yilia，这里有很多你想要的主题可选主题列表；评论：多说；站长统计：百度统计；访问统计：不蒜子； 山路崎岖难逃任何学习必经之路山路崎岖，只能慢行 hexo d （发布到git）报错12hexo dERROR Deployer not found: git 解决方法1npm install hexo-deployer-git –save hexo发布覆盖git源代码，导致域名绑定CNAME消失解决方法：在gitproject/source/下上传CNAME,以及其他静态费编译文件都可以放在这里 动态菜单显示异常解决方法： 安装插件1npm i hexo-generator-json-content --save 项目根配置_config.yml增加一下配置123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 评论插件安装在主题（yilia）配置文件_config.yml中设置baidu_analytics，不是网站根配置文件 落户www.liudaye.com","tags":[{"name":"博客","slug":"博客","permalink":"http://www.liudaye.com/tags/博客/"},{"name":"hexo","slug":"hexo","permalink":"http://www.liudaye.com/tags/hexo/"}]}]